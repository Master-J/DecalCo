[gd_scene load_steps=48 format=2]

[ext_resource path="res://decalco/src/alpha_mask.png" type="Texture" id=1]
[ext_resource path="res://decalco/examples/assets/textures/hex_pattern/hex_pattern_albedo.png" type="Texture" id=2]
[ext_resource path="res://decalco/examples/assets/textures/checker.png" type="Texture" id=4]
[ext_resource path="res://decalco/examples/assets/textures/hex_pattern/hex_pattern_specular.png" type="Texture" id=5]
[ext_resource path="res://decalco/examples/assets/textures/hex_pattern/hex_pattern_occlusion.png" type="Texture" id=6]
[ext_resource path="res://decalco/examples/assets/textures/hex_pattern/hex_pattern_normal.png" type="Texture" id=7]
[ext_resource path="res://decalco/examples/assets/textures/hex_pattern/hex_pattern_emission.png" type="Texture" id=8]
[ext_resource path="res://decalco/src/Decal.shader" type="Shader" id=9]
[ext_resource path="res://decalco/src/SetStartTimeOnDecal.gd" type="Script" id=11]

[sub_resource type="ProceduralSky" id=1]
sky_top_color = Color( 0.866667, 0.933333, 1, 1 )
sky_curve = 0.131768
sun_longitude = -40.35

[sub_resource type="Environment" id=2]
background_mode = 2
background_sky = SubResource( 1 )
background_color = Color( 0.431373, 0.431373, 0.431373, 1 )
ambient_light_color = Color( 0.262745, 0.262745, 0.262745, 1 )
ambient_light_sky_contribution = 0.61
glow_enabled = true
glow_bloom = 0.09

[sub_resource type="CubeMesh" id=3]

[sub_resource type="Shader" id=4]
code = "shader_type spatial;

uniform vec4 tint : hint_color = vec4(1.0);
uniform sampler2D tex : hint_albedo;
uniform int scale = 1;

void fragment() {
	float correct_scale = float(scale) * 6.0; //Correct tiling works only for 6*n scales
	
	ALBEDO = texture(tex, vec2(UV.x * 0.5, UV.y * 0.33) * correct_scale).rgb * tint.rgb;
}
"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/tint = Color( 0.501961, 0.501961, 0.501961, 1 )
shader_param/scale = 12
shader_param/tex = ExtResource( 4 )

[sub_resource type="CubeMesh" id=6]

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 4 )
shader_param/tint = Color( 0.372549, 0.372549, 0.372549, 1 )
shader_param/scale = 3
shader_param/tex = ExtResource( 4 )

[sub_resource type="SphereMesh" id=8]

[sub_resource type="CubeMesh" id=9]

[sub_resource type="ShaderMaterial" id=10]
render_priority = -1
shader = ExtResource( 9 )
shader_param/albedo_tint = Color( 1, 1, 1, 1 )
shader_param/emission_tint = Color( 0, 0, 0, 1 )
shader_param/emission_strength = 1.0
shader_param/occlusion_strength = 1.0
shader_param/specular_strength = 1.0
shader_param/metallic_strength = 1.0
shader_param/animation_speed = 1.0
shader_param/flipbook_columns_count = 1
shader_param/one_shot = false
shader_param/start_time = null
shader_param/current_frame_blend = 0.0
shader_param/use_normal_map = false
shader_param/border_mask = ExtResource( 1 )
shader_param/albedo = ExtResource( 2 )

[sub_resource type="CylinderMesh" id=11]
top_radius = 0.001

[sub_resource type="SpatialMaterial" id=12]
albedo_color = Color( 0, 0, 1, 1 )

[sub_resource type="CylinderMesh" id=13]

[sub_resource type="CubeMesh" id=14]

[sub_resource type="ShaderMaterial" id=15]
render_priority = -1
shader = ExtResource( 9 )
shader_param/albedo_tint = Color( 0.921569, 0.862745, 0.596078, 1 )
shader_param/emission_tint = Color( 0, 0, 0, 1 )
shader_param/emission_strength = 1.0
shader_param/occlusion_strength = 1.0
shader_param/specular_strength = 1.0
shader_param/metallic_strength = 1.0
shader_param/animation_speed = 1.0
shader_param/flipbook_columns_count = 1
shader_param/one_shot = false
shader_param/start_time = null
shader_param/current_frame_blend = 0.0
shader_param/use_normal_map = false
shader_param/border_mask = ExtResource( 1 )
shader_param/albedo = ExtResource( 2 )

[sub_resource type="CubeMesh" id=16]

[sub_resource type="ShaderMaterial" id=17]
render_priority = -1
shader = ExtResource( 9 )
shader_param/albedo_tint = Color( 0.172549, 0.172549, 0.172549, 1 )
shader_param/emission_tint = Color( 1, 0.537255, 0, 1 )
shader_param/emission_strength = 4.516
shader_param/occlusion_strength = 1.0
shader_param/specular_strength = 0.0
shader_param/metallic_strength = 1.0
shader_param/animation_speed = 1.0
shader_param/flipbook_columns_count = 1
shader_param/one_shot = false
shader_param/start_time = null
shader_param/current_frame_blend = 0.0
shader_param/use_normal_map = false
shader_param/border_mask = ExtResource( 1 )
shader_param/albedo = ExtResource( 2 )
shader_param/emission = ExtResource( 8 )

[sub_resource type="CubeMesh" id=18]

[sub_resource type="ShaderMaterial" id=19]
render_priority = -1
shader = ExtResource( 9 )
shader_param/albedo_tint = Color( 1, 1, 1, 1 )
shader_param/emission_tint = Color( 0, 0, 0, 1 )
shader_param/emission_strength = 4.516
shader_param/occlusion_strength = 1.0
shader_param/specular_strength = 1.0
shader_param/metallic_strength = 1.0
shader_param/animation_speed = 1.0
shader_param/flipbook_columns_count = 1
shader_param/one_shot = false
shader_param/start_time = null
shader_param/current_frame_blend = 0.0
shader_param/use_normal_map = true
shader_param/border_mask = ExtResource( 1 )
shader_param/albedo = ExtResource( 2 )
shader_param/normal_map = ExtResource( 7 )

[sub_resource type="CubeMesh" id=20]

[sub_resource type="ShaderMaterial" id=21]
render_priority = -1
shader = ExtResource( 9 )
shader_param/albedo_tint = Color( 1, 1, 1, 1 )
shader_param/emission_tint = Color( 0, 0, 0, 1 )
shader_param/emission_strength = 1.0
shader_param/occlusion_strength = 1.0
shader_param/specular_strength = 1.0
shader_param/metallic_strength = 1.0
shader_param/animation_speed = 1.0
shader_param/flipbook_columns_count = 1
shader_param/one_shot = false
shader_param/start_time = null
shader_param/current_frame_blend = 0.0
shader_param/use_normal_map = true
shader_param/border_mask = ExtResource( 1 )
shader_param/albedo = ExtResource( 2 )
shader_param/specular = ExtResource( 5 )
shader_param/normal_map = ExtResource( 7 )

[sub_resource type="CubeMesh" id=22]

[sub_resource type="ShaderMaterial" id=23]
render_priority = -1
shader = ExtResource( 9 )
shader_param/albedo_tint = Color( 1, 1, 1, 1 )
shader_param/emission_tint = Color( 0, 0, 0, 1 )
shader_param/emission_strength = 1.0
shader_param/occlusion_strength = 1.0
shader_param/specular_strength = 1.0
shader_param/metallic_strength = 1.0
shader_param/animation_speed = 1.0
shader_param/flipbook_columns_count = 1
shader_param/one_shot = false
shader_param/start_time = null
shader_param/current_frame_blend = 0.0
shader_param/use_normal_map = false
shader_param/border_mask = ExtResource( 1 )
shader_param/albedo = ExtResource( 2 )
shader_param/occlusion = ExtResource( 6 )

[sub_resource type="CubeMesh" id=24]

[sub_resource type="ShaderMaterial" id=25]
render_priority = -1
shader = ExtResource( 9 )
shader_param/albedo_tint = Color( 1, 1, 1, 1 )
shader_param/emission_tint = Color( 1, 0.537255, 0, 1 )
shader_param/emission_strength = 4.516
shader_param/occlusion_strength = 1.0
shader_param/specular_strength = 0.0
shader_param/metallic_strength = 1.0
shader_param/animation_speed = 1.0
shader_param/flipbook_columns_count = 1
shader_param/one_shot = false
shader_param/start_time = null
shader_param/current_frame_blend = 0.0
shader_param/use_normal_map = true
shader_param/border_mask = ExtResource( 1 )
shader_param/albedo = ExtResource( 2 )
shader_param/emission = ExtResource( 8 )
shader_param/occlusion = ExtResource( 6 )
shader_param/specular = ExtResource( 5 )
shader_param/normal_map = ExtResource( 7 )

[sub_resource type="CubeMesh" id=26]

[sub_resource type="Shader" id=27]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_never, cull_back, depth_test_disable;

uniform sampler2D border_mask : hint_white;

uniform sampler2D albedo : hint_albedo;
uniform vec4 albedo_tint : hint_color = vec4(1.0);

uniform sampler2D emission : hint_black;
uniform vec4 emission_tint : hint_color = vec4(vec3(0.0), 1.0);
uniform float emission_strength = 1.0;

uniform sampler2D occlusion : hint_white;
uniform float occlusion_strength = 1.0;

uniform sampler2D specular : hint_white;
uniform float specular_strength = 1.0;

uniform sampler2D metallic : hint_black;
uniform float metallic_strength = 1.0;

uniform sampler2D normal_map : hint_normal;

uniform float animation_speed = 1.0;
uniform int flipbook_columns_count = 1;
uniform bool one_shot = false;
uniform float start_time; // set by script

uniform float current_frame_blend = 0.0;

uniform bool use_normal_map = false;

varying vec3 decal_half_scale;
varying vec3 decal_right;
varying vec3 decal_up;
varying vec3 decal_forward;


int get_current_frame(float cur_time)
{
	int cur_frame = int(round((cur_time - start_time) * animation_speed));
	if (one_shot)
	{
		cur_frame = clamp(cur_frame,0,flipbook_columns_count*flipbook_columns_count-1);
	}
	return cur_frame;
}

//Checks if the given point is in the decal's boundaries using an oriented bounding box defined by the decal's tranform
bool is_point_in_decal_bounds(vec3 point, vec3 decal_position)
{
	vec3 scale = decal_half_scale * 2.0;
	vec3 p = point - decal_position;
	return abs(dot(p, decal_right)) <= scale.x && abs(dot(p, decal_forward)) <= scale.y && abs(dot(p, decal_up)) <= scale.z;
}


void vertex()
{
	vec3 world_position = (WORLD_MATRIX*vec4(0.0, 0.0, 0.0, 1.0)).xyz;
	UV = world_position.xy;
	UV2 = vec2(world_position.z,0.0);
	
	decal_right = (WORLD_MATRIX*vec4(1.0, 0.0, 0.0, 1.0)).xyz - world_position;
	decal_forward = (WORLD_MATRIX*vec4(0.0, 0.0, -1.0, 1.0)).xyz - world_position;
	decal_up = (WORLD_MATRIX*vec4(0.0, 1.0, 0.0, 1.0)).xyz - world_position;
	decal_half_scale = vec3(length(decal_right), length(decal_forward), length(decal_up)) / 2.0;
	decal_right = normalize(decal_right);
	decal_forward = normalize(decal_forward);
	decal_up = normalize(decal_up);
	
	//Override the projector mesh's normals in order to render the decal with mostly correct lighting
	NORMAL = vec3(0.0, 0.0, 1.0); 
	TANGENT = vec3(1.0, 0.0, 0.0); 
	BINORMAL = vec3(0.0, 1.0, 0.0); 
	
}

void fragment ()
{
	//Compute world position using the depth buffer
	float depth = texture(DEPTH_TEXTURE, SCREEN_UV).x;
	vec3 ndc = vec3(SCREEN_UV, depth) * 2.0 - 1.0;
	vec4 view = INV_PROJECTION_MATRIX * vec4(ndc, 1.0);
	view.xyz /= view.w;
	vec4 world = CAMERA_MATRIX * INV_PROJECTION_MATRIX * vec4(ndc, 1.0);
	vec3 world_position = world.xyz / world.w;
	
	vec3 decal_position = vec3(UV.xy, UV2.x);
	
	
	if(is_point_in_decal_bounds(world_position, decal_position))
	{
		//If the world position is within the decal's boundaries, we can compute it's uv coordinates
		vec4 local_position = (vec4(world_position - decal_position, 0.0)) * WORLD_MATRIX;
		int current_frame = get_current_frame(TIME);
		vec2 flipbook_frame_index = vec2(float(current_frame % flipbook_columns_count), float(current_frame / flipbook_columns_count));
		vec2 frame_size = vec2(1.0/float(flipbook_columns_count));

		vec2 uv_coords = (vec2(local_position.x, -local_position.y)  / (4.0*(decal_half_scale.xz * 2.0 * decal_half_scale.xz))) - vec2(0.5);
		
		//This is used to fix some blending issues on the decal's edges, border mask is a white texture with a 1px transparent border on all sides
		float border_alpha = texture(border_mask, uv_coords).a;
		
		//Offset UVs to handle flipbook animation
		uv_coords = uv_coords / float(flipbook_columns_count);
		uv_coords -= float(flipbook_columns_count - 1) * frame_size - flipbook_frame_index * frame_size;
		
		//Hacky stuff, to get UVs, correct lighting and normal mapping working, i need to get the fragment's local position in the light shader
		//Unfortunately, we can't use varying to pass values between the fragment and light shaders
		//To work around this limitation, i put the data i need in the TRANSMISSION built-in.
		//Also, due to some limitation caused by how this shader works, PBR lighting isn't supported.
		TRANSMISSION = vec3(1.0) - local_position.xyz / 100.0;
		
		ALBEDO = texture(albedo, uv_coords).rgb * albedo_tint.rgb;
		EMISSION = texture(emission, uv_coords).rgb * emission_tint.rgb * emission_strength;
		ALPHA = texture(albedo, uv_coords).a * border_alpha;
	}else{
		ALPHA = 0.0;
	}
}

//taken from http://www.thetenthplanet.de/archives/1180
mat3 cotangent_frame(vec3 N, vec3 p, vec2 uv) 
{ 

	vec3 dp1 = dFdx(p); 
	vec3 dp2 = dFdy(p);
	vec2 duv1 = dFdx(uv); 
	vec2 duv2 = dFdy(uv); 

	vec3 dp2perp = cross( dp2, N ); 
	vec3 dp1perp = cross( N, dp1 ); 
	
	vec3 T = dp2perp * duv1.x + dp1perp * duv2.x; 
	vec3 B = dp2perp * duv1.y + dp1perp * duv2.y; 

	float invmax = inversesqrt( max( dot(T,T), dot(B,B) ) ); 
	return mat3( T * invmax, B * invmax, N ); 
}

vec3 perturb_normal(vec3 N, vec3 V, vec2 texcoord ) 
{ 
	vec3 map = texture(normal_map, texcoord ).rgb; 
	map = map * 255./127. - 128./127.; 
	map.x *= -1.0;
	map.y *= 1.0;
	map.z *= -1.0;
	mat3 TBN = cotangent_frame(N, V, texcoord); 
	return normalize(TBN * map);
}

void light () 
{
	//Get back the data from the fragment shader
	vec3 data = (vec3(1.0) - TRANSMISSION) * 100.0;

	//Recompute UV coordinates
	vec2 uv_coords = vec2(data.x, -data.y);
	
	int current_frame = get_current_frame(TIME);
	vec2 flipbook_frame_index = vec2(float(current_frame % flipbook_columns_count), float(current_frame / flipbook_columns_count));
	vec2 frame_size = vec2(1.0/float(flipbook_columns_count));
	uv_coords = (uv_coords.xy / (4.0*(decal_half_scale.xz * 2.0 * decal_half_scale.xz))) - vec2(0.5);
	uv_coords = uv_coords / float(flipbook_columns_count);
	uv_coords -= float(flipbook_columns_count - 1) * frame_size - flipbook_frame_index * frame_size;

	//Normal mapping
	vec3 normal = NORMAL;
	if(use_normal_map == true)
	{
		normal = perturb_normal(NORMAL, VIEW, uv_coords);
	}

	float n_dot_l = clamp(dot(normal, LIGHT), 0.0, 1.0);

	//Specular lighting
	vec3 view_dir = normalize(CAMERA_MATRIX[3].xyz - data);
	vec3 reflection_dir = reflect(-LIGHT, normal);
	float spec = pow(max(dot(view_dir, reflection_dir), 0.0), 32);
	vec3 specular_light = specular_strength * spec * LIGHT_COLOR;  

	//Diffuse lighting
	vec3 albedo_color = ALBEDO * n_dot_l;
	albedo_color = albedo_color * mix(1.0, texture(occlusion, uv_coords).r, occlusion_strength);

	DIFFUSE_LIGHT += albedo_color * ATTENUATION * LIGHT_COLOR;
	SPECULAR_LIGHT = specular_light * texture(specular, uv_coords).r;
}
"

[sub_resource type="StreamTexture" id=28]
flags = 23
load_path = "res://.import/hex_pattern_albedo_flipbook.png-5fd0a467b99f34271dbe5eb8b6f73122.s3tc.stex"

[sub_resource type="StreamTexture" id=29]
flags = 7
load_path = "res://.import/hex_pattern_emission_flipbook.png-0cb0677c44c00b982c7c853bafbe6c24.s3tc.stex"

[sub_resource type="ShaderMaterial" id=30]
render_priority = -1
shader = SubResource( 27 )
shader_param/albedo_tint = Color( 0.513726, 0.513726, 0.513726, 1 )
shader_param/emission_tint = Color( 1, 1, 1, 1 )
shader_param/emission_strength = 1.0
shader_param/occlusion_strength = 1.0
shader_param/specular_strength = 1.0
shader_param/metallic_strength = 1.0
shader_param/animation_speed = 3.0
shader_param/flipbook_columns_count = 3
shader_param/one_shot = false
shader_param/start_time = 163.347
shader_param/current_frame_blend = 0.0
shader_param/use_normal_map = false
shader_param/albedo = SubResource( 28 )
shader_param/emission = SubResource( 29 )

[sub_resource type="CubeMesh" id=31]

[sub_resource type="ShaderMaterial" id=32]
render_priority = -1
shader = ExtResource( 9 )
shader_param/albedo_tint = Color( 1, 1, 1, 1 )
shader_param/emission_tint = Color( 0, 0, 0, 1 )
shader_param/emission_strength = 1.0
shader_param/occlusion_strength = 1.0
shader_param/specular_strength = 1.0
shader_param/metallic_strength = 1.0
shader_param/animation_speed = 1.0
shader_param/flipbook_columns_count = 1
shader_param/one_shot = false
shader_param/start_time = null
shader_param/current_frame_blend = 0.0
shader_param/use_normal_map = true
shader_param/border_mask = ExtResource( 1 )
shader_param/albedo = ExtResource( 2 )
shader_param/occlusion = ExtResource( 6 )
shader_param/specular = ExtResource( 5 )
shader_param/normal_map = ExtResource( 7 )

[sub_resource type="CubeMesh" id=33]

[sub_resource type="ShaderMaterial" id=34]
render_priority = -1
shader = ExtResource( 9 )
shader_param/albedo_tint = Color( 1, 1, 1, 1 )
shader_param/emission_tint = Color( 1, 0.537255, 0, 1 )
shader_param/emission_strength = 4.516
shader_param/occlusion_strength = 1.0
shader_param/specular_strength = 0.0
shader_param/metallic_strength = 1.0
shader_param/animation_speed = 1.0
shader_param/flipbook_columns_count = 1
shader_param/one_shot = false
shader_param/start_time = null
shader_param/current_frame_blend = 0.0
shader_param/use_normal_map = true
shader_param/border_mask = ExtResource( 1 )
shader_param/albedo = ExtResource( 2 )
shader_param/emission = ExtResource( 8 )
shader_param/occlusion = ExtResource( 6 )
shader_param/specular = ExtResource( 5 )
shader_param/normal_map = ExtResource( 7 )

[sub_resource type="CubeMesh" id=35]

[sub_resource type="ShaderMaterial" id=36]
render_priority = -1
shader = ExtResource( 9 )
shader_param/albedo_tint = Color( 1, 1, 1, 1 )
shader_param/emission_tint = Color( 0, 0, 0, 1 )
shader_param/emission_strength = 1.0
shader_param/occlusion_strength = 1.0
shader_param/specular_strength = 0.0
shader_param/metallic_strength = 1.0
shader_param/animation_speed = 1.0
shader_param/flipbook_columns_count = 1
shader_param/one_shot = false
shader_param/start_time = null
shader_param/current_frame_blend = 0.0
shader_param/use_normal_map = true
shader_param/border_mask = ExtResource( 1 )
shader_param/albedo = ExtResource( 2 )
shader_param/occlusion = ExtResource( 6 )
shader_param/specular = ExtResource( 5 )
shader_param/normal_map = ExtResource( 7 )

[sub_resource type="CubeMesh" id=37]

[sub_resource type="ShaderMaterial" id=38]
render_priority = -1
shader = ExtResource( 9 )
shader_param/albedo_tint = Color( 1, 1, 1, 1 )
shader_param/emission_tint = Color( 0, 0.552941, 1, 1 )
shader_param/emission_strength = 2.689
shader_param/occlusion_strength = 1.0
shader_param/specular_strength = 1.0
shader_param/metallic_strength = 1.0
shader_param/animation_speed = 1.0
shader_param/flipbook_columns_count = 1
shader_param/one_shot = false
shader_param/start_time = null
shader_param/current_frame_blend = 0.0
shader_param/use_normal_map = false
shader_param/border_mask = ExtResource( 1 )
shader_param/albedo = ExtResource( 2 )
shader_param/emission = ExtResource( 8 )
shader_param/occlusion = ExtResource( 6 )
shader_param/specular = ExtResource( 5 )

[node name="Decal_Examples" type="Spatial"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 2 )

[node name="World" type="Spatial" parent="."]

[node name="Ground" type="MeshInstance" parent="World"]
transform = Transform( 40, 0, 0, 0, 1, 0, 0, 0, 40, -3.33689, -1, 0 )
mesh = SubResource( 3 )
material/0 = SubResource( 5 )

[node name="Cube" type="MeshInstance" parent="World"]
transform = Transform( 5, 0, 0, 0, 5, 0, 0, 0, 5, 5, 5, -35 )
mesh = SubResource( 6 )
material/0 = SubResource( 7 )

[node name="Cube4" type="MeshInstance" parent="World"]
transform = Transform( 5, 0, 0, 0, 5, 0, 0, 0, 5, 25, 5, -35 )
mesh = SubResource( 6 )
material/0 = SubResource( 7 )

[node name="Cube2" type="MeshInstance" parent="World"]
transform = Transform( 5, 0, 0, 0, 5, 0, 0, 0, 5, -15, 5, -35 )
mesh = SubResource( 6 )
material/0 = SubResource( 7 )

[node name="Cube3" type="MeshInstance" parent="World"]
transform = Transform( 5, 0, 0, 0, 5, 0, 0, 0, 5, -35, 5, -35 )
mesh = SubResource( 6 )
material/0 = SubResource( 7 )

[node name="Cube8" type="MeshInstance" parent="World"]
transform = Transform( 5, 0, 0, 0, 5, 0, 0, 0, 5, 5, 5, -5 )
mesh = SubResource( 6 )
material/0 = SubResource( 7 )

[node name="Cube7" type="MeshInstance" parent="World"]
transform = Transform( 5, 0, 0, 0, 5, 0, 0, 0, 5, 25, 5, -5 )
mesh = SubResource( 6 )
material/0 = SubResource( 7 )

[node name="Cube6" type="MeshInstance" parent="World"]
transform = Transform( 5, 0, 0, 0, 5, 0, 0, 0, 5, -15, 5, -5 )
mesh = SubResource( 6 )
material/0 = SubResource( 7 )

[node name="Cube5" type="MeshInstance" parent="World"]
transform = Transform( 5, 0, 0, 0, 5, 0, 0, 0, 5, -35, 5, -5 )
mesh = SubResource( 6 )
material/0 = SubResource( 7 )

[node name="Cube12" type="MeshInstance" parent="World"]
transform = Transform( 5, 0, 0, 0, 5, 0, 0, 0, 5, 5, 5, 25 )
mesh = SubResource( 6 )
material/0 = SubResource( 7 )

[node name="Cube11" type="MeshInstance" parent="World"]
transform = Transform( 5, 0, 0, 0, 5, 0, 0, 0, 5, 32.911, 5, 27.764 )
mesh = SubResource( 6 )
material/0 = SubResource( 7 )

[node name="Cube10" type="MeshInstance" parent="World"]
transform = Transform( 5, 0, 0, 0, 5, 0, 0, 0, 5, -15, 5, 25 )
mesh = SubResource( 8 )
material/0 = SubResource( 7 )

[node name="Cube9" type="MeshInstance" parent="World"]
transform = Transform( 5, 0, 0, 0, 5, 0, 0, 0, 5, -35, 5, 25 )
mesh = SubResource( 6 )
material/0 = SubResource( 7 )

[node name="DirectionalLight" type="DirectionalLight" parent="World"]
transform = Transform( 0.72493, -0.344411, 0.596538, 0, 0.866026, 0.5, -0.688823, -0.362465, 0.627808, 0.572802, 4.67392, 8.30557 )
light_energy = 0.48
shadow_enabled = true

[node name="Decals" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 5, 0 )

[node name="Projection" type="MeshInstance" parent="Decals"]
transform = Transform( 2, 0, 0, 0, 2, 0, 0, 0, 2, -35, 0, -30 )
cast_shadow = 0
mesh = SubResource( 9 )
material/0 = SubResource( 10 )

[node name="Projection_Direction_Is_Along_Local_Z_Axis" type="Spatial" parent="Decals/Projection"]
transform = Transform( -1, 0, -3.25841e-07, 0, 1, 0, 3.25841e-07, 0, -1, 0, 0, 4.38464 )

[node name="MeshInstance" type="MeshInstance" parent="Decals/Projection/Projection_Direction_Is_Along_Local_Z_Axis"]
transform = Transform( 0.5, 0, 0, 0, -8.14603e-08, 0.5, 0, -0.5, -8.14603e-08, 0, 0, 1.5 )
mesh = SubResource( 11 )
material/0 = SubResource( 12 )

[node name="MeshInstance2" type="MeshInstance" parent="Decals/Projection/Projection_Direction_Is_Along_Local_Z_Axis"]
transform = Transform( 0.25, 0, 0, 0, -2.18557e-08, 0.25, 0, -0.5, -1.09278e-08, 0, 0, 2.5 )
mesh = SubResource( 13 )
material/0 = SubResource( 12 )

[node name="Albedo" type="MeshInstance" parent="Decals"]
transform = Transform( 3, 0, 0, 0, 3, 0, 0, 0, 0.1, -15, 0, -29.9379 )
cast_shadow = 0
mesh = SubResource( 14 )
material/0 = SubResource( 15 )

[node name="Emission" type="MeshInstance" parent="Decals"]
transform = Transform( 3, 0, 0, 0, 3, 0, 0, 0, 0.1, 5, 0, -29.938 )
cast_shadow = 0
mesh = SubResource( 16 )
material/0 = SubResource( 17 )

[node name="Normal_Mapping" type="MeshInstance" parent="Decals"]
transform = Transform( 3, 0, 0, 0, 3, 0, 0, 0, 0.1, 25, 0, -29.938 )
cast_shadow = 0
mesh = SubResource( 18 )
material/0 = SubResource( 19 )

[node name="Specular" type="MeshInstance" parent="Decals"]
transform = Transform( 2, 0, 0, 0, 2, 0, 0, 0, 2, -35, 0, -0.0362415 )
cast_shadow = 0
mesh = SubResource( 20 )
material/0 = SubResource( 21 )

[node name="OmniLight" type="OmniLight" parent="Decals/Specular"]
transform = Transform( 0.5, 0, 0, 0, 0.5, 0, 0, 0, 0.5, 1.81127, 0.629416, 0.404966 )
light_color = Color( 1, 0, 0, 1 )
omni_range = 2.81502
omni_attenuation = 0.0358969

[node name="Occlusion" type="MeshInstance" parent="Decals"]
transform = Transform( 3, 0, 0, 0, 3, 0, 0, 0, 0.1, -15, 0, 0.0258579 )
cast_shadow = 0
mesh = SubResource( 22 )
material/0 = SubResource( 23 )

[node name="All_Maps" type="MeshInstance" parent="Decals"]
transform = Transform( 3, 0, 0, 0, 3, 0, 0, 0, 0.1, 5, 0, 0.0257587 )
cast_shadow = 0
mesh = SubResource( 24 )
material/0 = SubResource( 25 )

[node name="Flipbook_Animation_(SetStartTimeOnDecal script needed)" type="MeshInstance" parent="Decals"]
transform = Transform( 3, 0, 0, 0, 3, 0, 0, 0, 0.1, 25, 0, 0.0257587 )
cast_shadow = 0
mesh = SubResource( 26 )
material/0 = SubResource( 30 )
script = ExtResource( 11 )

[node name="Projection_On_Angles" type="MeshInstance" parent="Decals"]
transform = Transform( 2.82843, 0, -2.82843, 0, 4, 0, 2.82843, 0, 2.82843, -39.0587, 0, 28.6954 )
cast_shadow = 0
mesh = SubResource( 31 )
material/0 = SubResource( 32 )

[node name="Projection_Direction_Is_Along_Local_Z_Axis" type="Spatial" parent="Decals/Projection_On_Angles"]
transform = Transform( -1, 0, -3.57628e-07, 0, 1, 0, 3.57628e-07, 0, -1, 1.43051e-06, 0, 4.14371 )

[node name="MeshInstance" type="MeshInstance" parent="Decals/Projection_On_Angles/Projection_Direction_Is_Along_Local_Z_Axis"]
transform = Transform( 0.5, 0, 0, 0, -8.14603e-08, 0.5, 0, -0.5, -8.14603e-08, 0, 0, 1.5 )
mesh = SubResource( 11 )
material/0 = SubResource( 12 )

[node name="MeshInstance2" type="MeshInstance" parent="Decals/Projection_On_Angles/Projection_Direction_Is_Along_Local_Z_Axis"]
transform = Transform( 0.25, 0, 0, 0, -8.14603e-08, 0.25, 0, -0.5, -4.07302e-08, 0, 0, 2.5 )
mesh = SubResource( 13 )
material/0 = SubResource( 12 )

[node name="Projection_On_Sphere" type="MeshInstance" parent="Decals"]
transform = Transform( 4, 0, 0, 0, 4, 0, 0, 0, 4, -15, 0, 26.8568 )
cast_shadow = 0
mesh = SubResource( 33 )
material/0 = SubResource( 34 )

[node name="Multi_Lights" type="MeshInstance" parent="Decals"]
transform = Transform( 3, 0, 0, 0, 3, 0, 0, 0, 0.1, 5, 0, 30.0084 )
cast_shadow = 0
mesh = SubResource( 35 )
material/0 = SubResource( 36 )

[node name="OmniLight" type="OmniLight" parent="Decals/Multi_Lights"]
transform = Transform( 0.333333, 0, 0, 0, 0.333333, 0, 0, 0, 10, 0.697144, 0.846878, 16.7906 )
light_color = Color( 1, 0, 0, 1 )
light_energy = 5.78
omni_range = 3.19604
omni_attenuation = 0.0384733

[node name="OmniLight2" type="OmniLight" parent="Decals/Multi_Lights"]
transform = Transform( 0.333333, 0, 0, 0, 0.333333, 0, 0, 0, 10, -0.62573, 0.311084, 16.7906 )
light_color = Color( 0, 0.462745, 1, 1 )
light_energy = 5.78
omni_range = 3.19604
omni_attenuation = 0.0384733

[node name="Realtime_Shadows" type="MeshInstance" parent="Decals"]
transform = Transform( 6, 0, 0, 0, -1.56192e-06, 0.1, 0, -9.587, -1.62921e-08, 22.0103, -4.98297, 25.8047 )
cast_shadow = 0
mesh = SubResource( 37 )
material/0 = SubResource( 38 )
